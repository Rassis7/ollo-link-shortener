name: Production Deployment

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  InstallDeps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION }}
          cache: "npm"

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        id: cache-primes
        with:
          path: node_modules
          key: |
            ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-

      - name: Install dependencies
        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: |
          npm install

  Release:
    needs: [InstallDeps]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}

      - name: git config
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Release
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ github.token }}

  Deploy:
    needs: [Release]
    runs-on: ubuntu-latest
    steps:
      - name: Call Render Deploy Hook
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"
